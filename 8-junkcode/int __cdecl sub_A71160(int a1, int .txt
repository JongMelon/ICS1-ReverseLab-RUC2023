int __cdecl sub_A71160(int a1, int a2, unsigned int a3) // a3 = str.len() a1 = input; a2 = B4
{
  int result; // eax
  unsigned int i; // [esp+8h] [ebp-10h]
  int v5; // [esp+Ch] [ebp-Ch]
  int v6; // [esp+10h] [ebp-8h]
  int v7; // [esp+10h] [ebp-8h]
  int v8; // [esp+10h] [ebp-8h]
  unsigned __int8 v9; // [esp+16h] [ebp-2h]
  unsigned __int8 v10; // [esp+17h] [ebp-1h]

  v5 = 0;
  v9 = 0;
  v6 = 0;
  result = 0;
  for ( i = 0; i < a3; ++i )
  {
    v10 = input[i];
    if ( v5 )
    {
      if ( v5 == 1 )
      {
        v5 = 2;
        result = v6 + a2;
        B4[v6] = byte_A73110[((int)v10 >> 4) & 0xF | (16 * (v9 & 3))];
      }
      else
      {
        v5 = 0;
        B4[v6] = byte_A73110[((int)v10 >> 6) & 3 | (4 * (v9 & 0xF))];
        result = ++v6 + a2;
        B4[v6] = byte_A73110[v10 & 0x3F];
      }
      ++v6;
    }
    else
    {
      v5 = 1;
      B4[v6] = byte_A73110[((int)v10 >> 2) & 0x3F];
      result = ++v6;
    }
    LOBYTE(result) = v10;
    v9 = v10;
  }
  if ( v5 == 1 )
  {
    *(_BYTE *)(v6 + a2) = byte_A73110[16 * (v9 & 3)];
    v7 = v6 + 1;
    *(_BYTE *)(v7 + a2) = 61;
    *(_BYTE *)(++v7 + a2) = 61;
    result = v7 + 1;
    v6 = v7 + 1;
  }
  else if ( v5 == 2 )
  {
    *(_BYTE *)(v6 + a2) = byte_A73110[4 * (v9 & 0xF)];
    v8 = v6 + 1;
    *(_BYTE *)(v8 + a2) = 61;
    result = v8 + 1;
    v6 = v8 + 1;
  }
  *(_BYTE *)(v6 + a2) = 0;
  return result;
}